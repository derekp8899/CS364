/**
 * 
 */
package manager;

import java.util.ArrayList;
import java.util.Arrays;

import javax.jms.Connection;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.ObjectMessage;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnectionFactory;

import api.BrokerConfig;
import api.PrimeChecker;

/**
 * @author david
 *
 */
public class Manager implements BrokerConfig {
	
	/**
	 * @param args ignored
	 */
	public static void main(String[] args) {
		ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(
				DEFAULT_BROKER);
		// make client trust deserializing objects in package 'api'
		factory.setTrustedPackages(
				new ArrayList<String>(Arrays.asList("api")));
		
		Connection connection = null;
		try {
			connection = factory.createConnection();
			Session session = connection.createSession(
					false, Session.AUTO_ACKNOWLEDGE);
			Destination dataQueue = session.createQueue(DATA_QUEUE);
			Destination workerQueue = session.createQueue(WORKER_QUEUE);
			MessageProducer producer = session.createProducer(dataQueue);
			MessageConsumer consumer = session.createConsumer(workerQueue);
			
			connection.start();
			
			// create the JMS message
			TextMessage textMessage = session.createTextMessage("1 13");
			producer.send(textMessage);
			
			Message message = consumer.receive();
			if (message instanceof ObjectMessage) {
				ObjectMessage om = (ObjectMessage)message;
				Object obj = om.getObject();
				if (obj instanceof PrimeChecker) {
					PrimeChecker pc = (PrimeChecker)obj;
					System.out.println(
							"Computed result: " + pc.getWorkResults());
				} else {
					System.out.println("Unknown object");
				}
			} else if (message instanceof TextMessage) {
				TextMessage tm = (TextMessage)message;
				System.out.println(tm.getText());
			} else {
				System.out.println("Unknown message type");
			}

			
			connection.close();
		} catch (JMSException e) {
			e.printStackTrace();
		} 
	}
}
